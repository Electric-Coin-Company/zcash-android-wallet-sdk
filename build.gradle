buildscript {
    ext.buildConfig = [
        'compileSdkVersion': 28,
        'minSdkVersion': 16,
        'targetSdkVersion': 28
    ]
    ext.versions = [
        'architectureComponents': [
            'lifecycle': '2.1.0-alpha02',
            'room': '2.1.0-alpha04'
        ],
        'grpc':'1.19.0',
        'kotlin': '1.3.21',
        'coroutines': '1.1.1',
        'junitJupiter': '5.4.0'
    ]
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0-alpha07'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${versions.kotlin}"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.21.0"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.8"
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.6'
    }
}

apply from: 'custom-tasks.gradle'
apply plugin: 'com.android.library'
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-android"
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.getkeepsafe.dexcount'

group = 'cash.z.android.wallet'
version = '1.7.4'

repositories {
    google()
    jcenter()
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode = 1_07_04_00  // last digits are alpha(0X) beta(1X) rc(2X) release(3X). Ex: 1_08_04_20 is a RC build
        versionName = "$version-alpha"
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled false
        archivesBaseName = "zcash-android-wallet-sdk-$versionName"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    sourceSets {
        main {
            java {
                srcDirs "build/generated/source/grpc"
            }
            proto {
                srcDir 'src/main/proto'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }
}

allOpen {
    // marker for classes that we want to be able to extend in debug builds for testing purposes
    annotation 'cash.z.wallet.sdk.annotation.OpenClass'
}

clean {
    delete "$project.projectDir/src/generated/source/grpc"
}

protobuf {
    generatedFilesBaseDir = "$projectDir/src/generated/source/grpc"
    protoc { artifact = 'com.google.protobuf:protoc:3.7.0' }
    plugins {
        javalite { artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0" }
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${versions.grpc}" }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc { // Options added to --grpc_out
                    option 'lite' }
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Architecture Components: Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:${versions.architectureComponents.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.architectureComponents.lifecycle}"
    kapt "androidx.lifecycle:lifecycle-compiler:${versions.architectureComponents.lifecycle}"

    // Architecture Components: Room
    implementation "androidx.room:room-runtime:${versions.architectureComponents.room}"
    implementation "androidx.room:room-common:${versions.architectureComponents.room}"
    kapt "androidx.room:room-compiler:${versions.architectureComponents.room}"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

    // grpc-java
    implementation "io.grpc:grpc-okhttp:${versions.grpc}"
    implementation "io.grpc:grpc-protobuf-lite:${versions.grpc}"
    implementation "io.grpc:grpc-stub:${versions.grpc}"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Other
    implementation "com.jakewharton.timber:timber:4.7.1"

    // Tests
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
    testImplementation 'org.mockito:mockito-junit-jupiter:2.25.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junitJupiter}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${versions.junitJupiter}"
    testImplementation "org.junit.jupiter:junit-jupiter-migrationsupport:${versions.junitJupiter}"
    testImplementation "io.grpc:grpc-testing:${versions.grpc}"

    // NOTE: androidTests will use JUnit4, while src/test/java tests will leverage Junit5
    // Attempting to use JUnit5 via https://github.com/mannodermaus/android-junit5 was painful. The plugin configuration
    // was buggy, crashing in several places. It also would require a separate test flavor because it's minimum API 26
    // because "JUnit 5 uses Java 8-specific APIs that didn't exist on Android before the Oreo release."
    androidTestImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    androidTestImplementation 'org.mockito:mockito-android:2.25.0'
    androidTestImplementation "androidx.test:runner:1.1.2-alpha02"
    androidTestImplementation "androidx.test:core:1.1.1-alpha02"
    androidTestImplementation "androidx.arch.core:core-testing:2.0.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1-alpha02'
}


preBuild.dependsOn includeDirBugFix
preBuild.dependsOn copyAllJniLibs
