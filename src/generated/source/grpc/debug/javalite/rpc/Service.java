// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package rpc;

public final class Service {
  private Service() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface BlockIDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.BlockID)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional uint64 height = 1;</code>
     */
    long getHeight();

    /**
     * <code>optional bytes hash = 2;</code>
     */
    com.google.protobuf.ByteString getHash();
  }
  /**
   * <pre>
   * A BlockID message contains identifiers to select a block: a height or a
   * hash. If the hash is present it takes precedence.
   * </pre>
   *
   * Protobuf type {@code rpc.BlockID}
   */
  public  static final class BlockID extends
      com.google.protobuf.GeneratedMessageLite<
          BlockID, BlockID.Builder> implements
      // @@protoc_insertion_point(message_implements:rpc.BlockID)
      BlockIDOrBuilder {
    private BlockID() {
      hash_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int HEIGHT_FIELD_NUMBER = 1;
    private long height_;
    /**
     * <code>optional uint64 height = 1;</code>
     */
    public long getHeight() {
      return height_;
    }
    /**
     * <code>optional uint64 height = 1;</code>
     */
    private void setHeight(long value) {
      
      height_ = value;
    }
    /**
     * <code>optional uint64 height = 1;</code>
     */
    private void clearHeight() {
      
      height_ = 0L;
    }

    public static final int HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString hash_;
    /**
     * <code>optional bytes hash = 2;</code>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }
    /**
     * <code>optional bytes hash = 2;</code>
     */
    private void setHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hash_ = value;
    }
    /**
     * <code>optional bytes hash = 2;</code>
     */
    private void clearHash() {
      
      hash_ = getDefaultInstance().getHash();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (height_ != 0L) {
        output.writeUInt64(1, height_);
      }
      if (!hash_.isEmpty()) {
        output.writeBytes(2, hash_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, height_);
      }
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, hash_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static rpc.Service.BlockID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.BlockID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.BlockID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.BlockID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.BlockID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.BlockID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.BlockID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.BlockID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.BlockID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.BlockID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Service.BlockID prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A BlockID message contains identifiers to select a block: a height or a
     * hash. If the hash is present it takes precedence.
     * </pre>
     *
     * Protobuf type {@code rpc.BlockID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          rpc.Service.BlockID, Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.BlockID)
        rpc.Service.BlockIDOrBuilder {
      // Construct using rpc.Service.BlockID.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional uint64 height = 1;</code>
       */
      public long getHeight() {
        return instance.getHeight();
      }
      /**
       * <code>optional uint64 height = 1;</code>
       */
      public Builder setHeight(long value) {
        copyOnWrite();
        instance.setHeight(value);
        return this;
      }
      /**
       * <code>optional uint64 height = 1;</code>
       */
      public Builder clearHeight() {
        copyOnWrite();
        instance.clearHeight();
        return this;
      }

      /**
       * <code>optional bytes hash = 2;</code>
       */
      public com.google.protobuf.ByteString getHash() {
        return instance.getHash();
      }
      /**
       * <code>optional bytes hash = 2;</code>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHash(value);
        return this;
      }
      /**
       * <code>optional bytes hash = 2;</code>
       */
      public Builder clearHash() {
        copyOnWrite();
        instance.clearHash();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:rpc.BlockID)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new rpc.Service.BlockID();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          rpc.Service.BlockID other = (rpc.Service.BlockID) arg1;
          height_ = visitor.visitLong(height_ != 0L, height_,
              other.height_ != 0L, other.height_);
          hash_ = visitor.visitByteString(hash_ != com.google.protobuf.ByteString.EMPTY, hash_,
              other.hash_ != com.google.protobuf.ByteString.EMPTY, other.hash_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  height_ = input.readUInt64();
                  break;
                }
                case 18: {

                  hash_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (rpc.Service.BlockID.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:rpc.BlockID)
    private static final rpc.Service.BlockID DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BlockID();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static rpc.Service.BlockID getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BlockID> PARSER;

    public static com.google.protobuf.Parser<BlockID> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BlockRangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.BlockRange)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .rpc.BlockID start = 1;</code>
     */
    boolean hasStart();
    /**
     * <code>optional .rpc.BlockID start = 1;</code>
     */
    rpc.Service.BlockID getStart();

    /**
     * <code>optional .rpc.BlockID end = 2;</code>
     */
    boolean hasEnd();
    /**
     * <code>optional .rpc.BlockID end = 2;</code>
     */
    rpc.Service.BlockID getEnd();
  }
  /**
   * <pre>
   * BlockRange technically allows ranging from hash to hash etc but this is not
   * currently intended for support, though there is no reason you couldn't do
   * it. Further permutations are left as an exercise.
   * </pre>
   *
   * Protobuf type {@code rpc.BlockRange}
   */
  public  static final class BlockRange extends
      com.google.protobuf.GeneratedMessageLite<
          BlockRange, BlockRange.Builder> implements
      // @@protoc_insertion_point(message_implements:rpc.BlockRange)
      BlockRangeOrBuilder {
    private BlockRange() {
    }
    public static final int START_FIELD_NUMBER = 1;
    private rpc.Service.BlockID start_;
    /**
     * <code>optional .rpc.BlockID start = 1;</code>
     */
    public boolean hasStart() {
      return start_ != null;
    }
    /**
     * <code>optional .rpc.BlockID start = 1;</code>
     */
    public rpc.Service.BlockID getStart() {
      return start_ == null ? rpc.Service.BlockID.getDefaultInstance() : start_;
    }
    /**
     * <code>optional .rpc.BlockID start = 1;</code>
     */
    private void setStart(rpc.Service.BlockID value) {
      if (value == null) {
        throw new NullPointerException();
      }
      start_ = value;
      
      }
    /**
     * <code>optional .rpc.BlockID start = 1;</code>
     */
    private void setStart(
        rpc.Service.BlockID.Builder builderForValue) {
      start_ = builderForValue.build();
      
    }
    /**
     * <code>optional .rpc.BlockID start = 1;</code>
     */
    private void mergeStart(rpc.Service.BlockID value) {
      if (start_ != null &&
          start_ != rpc.Service.BlockID.getDefaultInstance()) {
        start_ =
          rpc.Service.BlockID.newBuilder(start_).mergeFrom(value).buildPartial();
      } else {
        start_ = value;
      }
      
    }
    /**
     * <code>optional .rpc.BlockID start = 1;</code>
     */
    private void clearStart() {  start_ = null;
      
    }

    public static final int END_FIELD_NUMBER = 2;
    private rpc.Service.BlockID end_;
    /**
     * <code>optional .rpc.BlockID end = 2;</code>
     */
    public boolean hasEnd() {
      return end_ != null;
    }
    /**
     * <code>optional .rpc.BlockID end = 2;</code>
     */
    public rpc.Service.BlockID getEnd() {
      return end_ == null ? rpc.Service.BlockID.getDefaultInstance() : end_;
    }
    /**
     * <code>optional .rpc.BlockID end = 2;</code>
     */
    private void setEnd(rpc.Service.BlockID value) {
      if (value == null) {
        throw new NullPointerException();
      }
      end_ = value;
      
      }
    /**
     * <code>optional .rpc.BlockID end = 2;</code>
     */
    private void setEnd(
        rpc.Service.BlockID.Builder builderForValue) {
      end_ = builderForValue.build();
      
    }
    /**
     * <code>optional .rpc.BlockID end = 2;</code>
     */
    private void mergeEnd(rpc.Service.BlockID value) {
      if (end_ != null &&
          end_ != rpc.Service.BlockID.getDefaultInstance()) {
        end_ =
          rpc.Service.BlockID.newBuilder(end_).mergeFrom(value).buildPartial();
      } else {
        end_ = value;
      }
      
    }
    /**
     * <code>optional .rpc.BlockID end = 2;</code>
     */
    private void clearEnd() {  end_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (start_ != null) {
        output.writeMessage(1, getStart());
      }
      if (end_ != null) {
        output.writeMessage(2, getEnd());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (start_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStart());
      }
      if (end_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEnd());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static rpc.Service.BlockRange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.BlockRange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.BlockRange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.BlockRange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.BlockRange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.BlockRange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.BlockRange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.BlockRange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.BlockRange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.BlockRange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Service.BlockRange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * BlockRange technically allows ranging from hash to hash etc but this is not
     * currently intended for support, though there is no reason you couldn't do
     * it. Further permutations are left as an exercise.
     * </pre>
     *
     * Protobuf type {@code rpc.BlockRange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          rpc.Service.BlockRange, Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.BlockRange)
        rpc.Service.BlockRangeOrBuilder {
      // Construct using rpc.Service.BlockRange.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .rpc.BlockID start = 1;</code>
       */
      public boolean hasStart() {
        return instance.hasStart();
      }
      /**
       * <code>optional .rpc.BlockID start = 1;</code>
       */
      public rpc.Service.BlockID getStart() {
        return instance.getStart();
      }
      /**
       * <code>optional .rpc.BlockID start = 1;</code>
       */
      public Builder setStart(rpc.Service.BlockID value) {
        copyOnWrite();
        instance.setStart(value);
        return this;
        }
      /**
       * <code>optional .rpc.BlockID start = 1;</code>
       */
      public Builder setStart(
          rpc.Service.BlockID.Builder builderForValue) {
        copyOnWrite();
        instance.setStart(builderForValue);
        return this;
      }
      /**
       * <code>optional .rpc.BlockID start = 1;</code>
       */
      public Builder mergeStart(rpc.Service.BlockID value) {
        copyOnWrite();
        instance.mergeStart(value);
        return this;
      }
      /**
       * <code>optional .rpc.BlockID start = 1;</code>
       */
      public Builder clearStart() {  copyOnWrite();
        instance.clearStart();
        return this;
      }

      /**
       * <code>optional .rpc.BlockID end = 2;</code>
       */
      public boolean hasEnd() {
        return instance.hasEnd();
      }
      /**
       * <code>optional .rpc.BlockID end = 2;</code>
       */
      public rpc.Service.BlockID getEnd() {
        return instance.getEnd();
      }
      /**
       * <code>optional .rpc.BlockID end = 2;</code>
       */
      public Builder setEnd(rpc.Service.BlockID value) {
        copyOnWrite();
        instance.setEnd(value);
        return this;
        }
      /**
       * <code>optional .rpc.BlockID end = 2;</code>
       */
      public Builder setEnd(
          rpc.Service.BlockID.Builder builderForValue) {
        copyOnWrite();
        instance.setEnd(builderForValue);
        return this;
      }
      /**
       * <code>optional .rpc.BlockID end = 2;</code>
       */
      public Builder mergeEnd(rpc.Service.BlockID value) {
        copyOnWrite();
        instance.mergeEnd(value);
        return this;
      }
      /**
       * <code>optional .rpc.BlockID end = 2;</code>
       */
      public Builder clearEnd() {  copyOnWrite();
        instance.clearEnd();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:rpc.BlockRange)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new rpc.Service.BlockRange();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          rpc.Service.BlockRange other = (rpc.Service.BlockRange) arg1;
          start_ = visitor.visitMessage(start_, other.start_);
          end_ = visitor.visitMessage(end_, other.end_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  rpc.Service.BlockID.Builder subBuilder = null;
                  if (start_ != null) {
                    subBuilder = start_.toBuilder();
                  }
                  start_ = input.readMessage(rpc.Service.BlockID.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(start_);
                    start_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  rpc.Service.BlockID.Builder subBuilder = null;
                  if (end_ != null) {
                    subBuilder = end_.toBuilder();
                  }
                  end_ = input.readMessage(rpc.Service.BlockID.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(end_);
                    end_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (rpc.Service.BlockRange.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:rpc.BlockRange)
    private static final rpc.Service.BlockRange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BlockRange();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static rpc.Service.BlockRange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BlockRange> PARSER;

    public static com.google.protobuf.Parser<BlockRange> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TxFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.TxFilter)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .rpc.BlockID block = 1;</code>
     */
    boolean hasBlock();
    /**
     * <code>optional .rpc.BlockID block = 1;</code>
     */
    rpc.Service.BlockID getBlock();

    /**
     * <code>optional uint64 index = 2;</code>
     */
    long getIndex();

    /**
     * <code>optional bytes hash = 3;</code>
     */
    com.google.protobuf.ByteString getHash();
  }
  /**
   * <pre>
   * A TxFilter contains the information needed to identify a particular
   * transaction: either a block and an index, or a direct transaction hash.
   * </pre>
   *
   * Protobuf type {@code rpc.TxFilter}
   */
  public  static final class TxFilter extends
      com.google.protobuf.GeneratedMessageLite<
          TxFilter, TxFilter.Builder> implements
      // @@protoc_insertion_point(message_implements:rpc.TxFilter)
      TxFilterOrBuilder {
    private TxFilter() {
      hash_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int BLOCK_FIELD_NUMBER = 1;
    private rpc.Service.BlockID block_;
    /**
     * <code>optional .rpc.BlockID block = 1;</code>
     */
    public boolean hasBlock() {
      return block_ != null;
    }
    /**
     * <code>optional .rpc.BlockID block = 1;</code>
     */
    public rpc.Service.BlockID getBlock() {
      return block_ == null ? rpc.Service.BlockID.getDefaultInstance() : block_;
    }
    /**
     * <code>optional .rpc.BlockID block = 1;</code>
     */
    private void setBlock(rpc.Service.BlockID value) {
      if (value == null) {
        throw new NullPointerException();
      }
      block_ = value;
      
      }
    /**
     * <code>optional .rpc.BlockID block = 1;</code>
     */
    private void setBlock(
        rpc.Service.BlockID.Builder builderForValue) {
      block_ = builderForValue.build();
      
    }
    /**
     * <code>optional .rpc.BlockID block = 1;</code>
     */
    private void mergeBlock(rpc.Service.BlockID value) {
      if (block_ != null &&
          block_ != rpc.Service.BlockID.getDefaultInstance()) {
        block_ =
          rpc.Service.BlockID.newBuilder(block_).mergeFrom(value).buildPartial();
      } else {
        block_ = value;
      }
      
    }
    /**
     * <code>optional .rpc.BlockID block = 1;</code>
     */
    private void clearBlock() {  block_ = null;
      
    }

    public static final int INDEX_FIELD_NUMBER = 2;
    private long index_;
    /**
     * <code>optional uint64 index = 2;</code>
     */
    public long getIndex() {
      return index_;
    }
    /**
     * <code>optional uint64 index = 2;</code>
     */
    private void setIndex(long value) {
      
      index_ = value;
    }
    /**
     * <code>optional uint64 index = 2;</code>
     */
    private void clearIndex() {
      
      index_ = 0L;
    }

    public static final int HASH_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString hash_;
    /**
     * <code>optional bytes hash = 3;</code>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }
    /**
     * <code>optional bytes hash = 3;</code>
     */
    private void setHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hash_ = value;
    }
    /**
     * <code>optional bytes hash = 3;</code>
     */
    private void clearHash() {
      
      hash_ = getDefaultInstance().getHash();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (block_ != null) {
        output.writeMessage(1, getBlock());
      }
      if (index_ != 0L) {
        output.writeUInt64(2, index_);
      }
      if (!hash_.isEmpty()) {
        output.writeBytes(3, hash_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (block_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBlock());
      }
      if (index_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, index_);
      }
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, hash_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static rpc.Service.TxFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.TxFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.TxFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.TxFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.TxFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.TxFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.TxFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.TxFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.TxFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.TxFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Service.TxFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A TxFilter contains the information needed to identify a particular
     * transaction: either a block and an index, or a direct transaction hash.
     * </pre>
     *
     * Protobuf type {@code rpc.TxFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          rpc.Service.TxFilter, Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.TxFilter)
        rpc.Service.TxFilterOrBuilder {
      // Construct using rpc.Service.TxFilter.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .rpc.BlockID block = 1;</code>
       */
      public boolean hasBlock() {
        return instance.hasBlock();
      }
      /**
       * <code>optional .rpc.BlockID block = 1;</code>
       */
      public rpc.Service.BlockID getBlock() {
        return instance.getBlock();
      }
      /**
       * <code>optional .rpc.BlockID block = 1;</code>
       */
      public Builder setBlock(rpc.Service.BlockID value) {
        copyOnWrite();
        instance.setBlock(value);
        return this;
        }
      /**
       * <code>optional .rpc.BlockID block = 1;</code>
       */
      public Builder setBlock(
          rpc.Service.BlockID.Builder builderForValue) {
        copyOnWrite();
        instance.setBlock(builderForValue);
        return this;
      }
      /**
       * <code>optional .rpc.BlockID block = 1;</code>
       */
      public Builder mergeBlock(rpc.Service.BlockID value) {
        copyOnWrite();
        instance.mergeBlock(value);
        return this;
      }
      /**
       * <code>optional .rpc.BlockID block = 1;</code>
       */
      public Builder clearBlock() {  copyOnWrite();
        instance.clearBlock();
        return this;
      }

      /**
       * <code>optional uint64 index = 2;</code>
       */
      public long getIndex() {
        return instance.getIndex();
      }
      /**
       * <code>optional uint64 index = 2;</code>
       */
      public Builder setIndex(long value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <code>optional uint64 index = 2;</code>
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      /**
       * <code>optional bytes hash = 3;</code>
       */
      public com.google.protobuf.ByteString getHash() {
        return instance.getHash();
      }
      /**
       * <code>optional bytes hash = 3;</code>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHash(value);
        return this;
      }
      /**
       * <code>optional bytes hash = 3;</code>
       */
      public Builder clearHash() {
        copyOnWrite();
        instance.clearHash();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:rpc.TxFilter)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new rpc.Service.TxFilter();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          rpc.Service.TxFilter other = (rpc.Service.TxFilter) arg1;
          block_ = visitor.visitMessage(block_, other.block_);
          index_ = visitor.visitLong(index_ != 0L, index_,
              other.index_ != 0L, other.index_);
          hash_ = visitor.visitByteString(hash_ != com.google.protobuf.ByteString.EMPTY, hash_,
              other.hash_ != com.google.protobuf.ByteString.EMPTY, other.hash_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  rpc.Service.BlockID.Builder subBuilder = null;
                  if (block_ != null) {
                    subBuilder = block_.toBuilder();
                  }
                  block_ = input.readMessage(rpc.Service.BlockID.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(block_);
                    block_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  index_ = input.readUInt64();
                  break;
                }
                case 26: {

                  hash_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (rpc.Service.TxFilter.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:rpc.TxFilter)
    private static final rpc.Service.TxFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TxFilter();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static rpc.Service.TxFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TxFilter> PARSER;

    public static com.google.protobuf.Parser<TxFilter> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RawTransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.RawTransaction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional bytes data = 1;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * RawTransaction contains the complete transaction data.
   * </pre>
   *
   * Protobuf type {@code rpc.RawTransaction}
   */
  public  static final class RawTransaction extends
      com.google.protobuf.GeneratedMessageLite<
          RawTransaction, RawTransaction.Builder> implements
      // @@protoc_insertion_point(message_implements:rpc.RawTransaction)
      RawTransactionOrBuilder {
    private RawTransaction() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 1;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>optional bytes data = 1;</code>
     */
    private void setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      data_ = value;
    }
    /**
     * <code>optional bytes data = 1;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static rpc.Service.RawTransaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.RawTransaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.RawTransaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.RawTransaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.RawTransaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.RawTransaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.RawTransaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.RawTransaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.RawTransaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.RawTransaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Service.RawTransaction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * RawTransaction contains the complete transaction data.
     * </pre>
     *
     * Protobuf type {@code rpc.RawTransaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          rpc.Service.RawTransaction, Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.RawTransaction)
        rpc.Service.RawTransactionOrBuilder {
      // Construct using rpc.Service.RawTransaction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional bytes data = 1;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>optional bytes data = 1;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>optional bytes data = 1;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:rpc.RawTransaction)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new rpc.Service.RawTransaction();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          rpc.Service.RawTransaction other = (rpc.Service.RawTransaction) arg1;
          data_ = visitor.visitByteString(data_ != com.google.protobuf.ByteString.EMPTY, data_,
              other.data_ != com.google.protobuf.ByteString.EMPTY, other.data_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {

                  data_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (rpc.Service.RawTransaction.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:rpc.RawTransaction)
    private static final rpc.Service.RawTransaction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RawTransaction();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static rpc.Service.RawTransaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RawTransaction> PARSER;

    public static com.google.protobuf.Parser<RawTransaction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SendResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.SendResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 errorCode = 1;</code>
     */
    int getErrorCode();

    /**
     * <code>optional string errorMessage = 2;</code>
     */
    java.lang.String getErrorMessage();
    /**
     * <code>optional string errorMessage = 2;</code>
     */
    com.google.protobuf.ByteString
        getErrorMessageBytes();
  }
  /**
   * Protobuf type {@code rpc.SendResponse}
   */
  public  static final class SendResponse extends
      com.google.protobuf.GeneratedMessageLite<
          SendResponse, SendResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:rpc.SendResponse)
      SendResponseOrBuilder {
    private SendResponse() {
      errorMessage_ = "";
    }
    public static final int ERRORCODE_FIELD_NUMBER = 1;
    private int errorCode_;
    /**
     * <code>optional int32 errorCode = 1;</code>
     */
    public int getErrorCode() {
      return errorCode_;
    }
    /**
     * <code>optional int32 errorCode = 1;</code>
     */
    private void setErrorCode(int value) {
      
      errorCode_ = value;
    }
    /**
     * <code>optional int32 errorCode = 1;</code>
     */
    private void clearErrorCode() {
      
      errorCode_ = 0;
    }

    public static final int ERRORMESSAGE_FIELD_NUMBER = 2;
    private java.lang.String errorMessage_;
    /**
     * <code>optional string errorMessage = 2;</code>
     */
    public java.lang.String getErrorMessage() {
      return errorMessage_;
    }
    /**
     * <code>optional string errorMessage = 2;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(errorMessage_);
    }
    /**
     * <code>optional string errorMessage = 2;</code>
     */
    private void setErrorMessage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      errorMessage_ = value;
    }
    /**
     * <code>optional string errorMessage = 2;</code>
     */
    private void clearErrorMessage() {
      
      errorMessage_ = getDefaultInstance().getErrorMessage();
    }
    /**
     * <code>optional string errorMessage = 2;</code>
     */
    private void setErrorMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      errorMessage_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (errorCode_ != 0) {
        output.writeInt32(1, errorCode_);
      }
      if (!errorMessage_.isEmpty()) {
        output.writeString(2, getErrorMessage());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (errorCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, errorCode_);
      }
      if (!errorMessage_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getErrorMessage());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static rpc.Service.SendResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.SendResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.SendResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.SendResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.SendResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.SendResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.SendResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.SendResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.SendResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.SendResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Service.SendResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code rpc.SendResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          rpc.Service.SendResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.SendResponse)
        rpc.Service.SendResponseOrBuilder {
      // Construct using rpc.Service.SendResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 errorCode = 1;</code>
       */
      public int getErrorCode() {
        return instance.getErrorCode();
      }
      /**
       * <code>optional int32 errorCode = 1;</code>
       */
      public Builder setErrorCode(int value) {
        copyOnWrite();
        instance.setErrorCode(value);
        return this;
      }
      /**
       * <code>optional int32 errorCode = 1;</code>
       */
      public Builder clearErrorCode() {
        copyOnWrite();
        instance.clearErrorCode();
        return this;
      }

      /**
       * <code>optional string errorMessage = 2;</code>
       */
      public java.lang.String getErrorMessage() {
        return instance.getErrorMessage();
      }
      /**
       * <code>optional string errorMessage = 2;</code>
       */
      public com.google.protobuf.ByteString
          getErrorMessageBytes() {
        return instance.getErrorMessageBytes();
      }
      /**
       * <code>optional string errorMessage = 2;</code>
       */
      public Builder setErrorMessage(
          java.lang.String value) {
        copyOnWrite();
        instance.setErrorMessage(value);
        return this;
      }
      /**
       * <code>optional string errorMessage = 2;</code>
       */
      public Builder clearErrorMessage() {
        copyOnWrite();
        instance.clearErrorMessage();
        return this;
      }
      /**
       * <code>optional string errorMessage = 2;</code>
       */
      public Builder setErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setErrorMessageBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:rpc.SendResponse)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new rpc.Service.SendResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          rpc.Service.SendResponse other = (rpc.Service.SendResponse) arg1;
          errorCode_ = visitor.visitInt(errorCode_ != 0, errorCode_,
              other.errorCode_ != 0, other.errorCode_);
          errorMessage_ = visitor.visitString(!errorMessage_.isEmpty(), errorMessage_,
              !other.errorMessage_.isEmpty(), other.errorMessage_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  errorCode_ = input.readInt32();
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  errorMessage_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (rpc.Service.SendResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:rpc.SendResponse)
    private static final rpc.Service.SendResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SendResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static rpc.Service.SendResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SendResponse> PARSER;

    public static com.google.protobuf.Parser<SendResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChainSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.ChainSpec)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   * Empty placeholder. Someday we may want to specify e.g. a particular chain fork.
   * </pre>
   *
   * Protobuf type {@code rpc.ChainSpec}
   */
  public  static final class ChainSpec extends
      com.google.protobuf.GeneratedMessageLite<
          ChainSpec, ChainSpec.Builder> implements
      // @@protoc_insertion_point(message_implements:rpc.ChainSpec)
      ChainSpecOrBuilder {
    private ChainSpec() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    public static rpc.Service.ChainSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.ChainSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.ChainSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static rpc.Service.ChainSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static rpc.Service.ChainSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.ChainSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.ChainSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.ChainSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static rpc.Service.ChainSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static rpc.Service.ChainSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Service.ChainSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Empty placeholder. Someday we may want to specify e.g. a particular chain fork.
     * </pre>
     *
     * Protobuf type {@code rpc.ChainSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          rpc.Service.ChainSpec, Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.ChainSpec)
        rpc.Service.ChainSpecOrBuilder {
      // Construct using rpc.Service.ChainSpec.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:rpc.ChainSpec)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new rpc.Service.ChainSpec();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          rpc.Service.ChainSpec other = (rpc.Service.ChainSpec) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (rpc.Service.ChainSpec.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:rpc.ChainSpec)
    private static final rpc.Service.ChainSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ChainSpec();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static rpc.Service.ChainSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChainSpec> PARSER;

    public static com.google.protobuf.Parser<ChainSpec> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
